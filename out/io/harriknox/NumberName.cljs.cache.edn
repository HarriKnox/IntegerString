;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name io.harriknox.NumberName, :imports nil, :requires {clojure.string clojure.string}, :uses nil, :defs {ten-to-hundred-modification {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 38, :column 7, :end-line 38, :end-column 34, :arglists (quote ([tens hundreds]))}, :name io.harriknox.NumberName/ten-to-hundred-modification, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 34, :method-params ([tens hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 38, :end-line 38, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tens hundreds]))}, power-of-10-to-string {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 124, :column 7, :end-line 124, :end-column 28, :arglists (quote ([exponent]))}, :name io.harriknox.NumberName/power-of-10-to-string, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 28, :method-params ([exponent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 124, :end-line 124, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exponent]))}, large-number-group-prefix {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 47, :column 7, :end-line 47, :end-column 32, :arglists (quote ([units tens hundreds]))}, :name io.harriknox.NumberName/large-number-group-prefix, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 32, :method-params ([units tens hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 47, :end-line 47, :max-fixed-arity 3, :fn-var true, :arglists (quote ([units tens hundreds]))}, unit-to-hundred-modification {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 28, :column 7, :end-line 28, :end-column 35, :arglists (quote ([units hundreds]))}, :name io.harriknox.NumberName/unit-to-hundred-modification, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 35, :method-params ([units hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 28, :end-line 28, :max-fixed-arity 2, :fn-var true, :arglists (quote ([units hundreds]))}, illion-group-name {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 60, :column 7, :end-line 60, :end-column 24, :arglists (quote ([group-number]))}, :name io.harriknox.NumberName/illion-group-name, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 24, :method-params ([group-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 60, :end-line 60, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-number]))}, modified-number-name {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 79, :column 7, :end-line 79, :end-column 27, :arglists (quote ([number suffix]))}, :name io.harriknox.NumberName/modified-number-name, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 27, :method-params ([number suffix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 2, :fn-var true, :arglists (quote ([number suffix]))}, large-number-hundred-prefixes {:name io.harriknox.NumberName/large-number-hundred-prefixes, :file "./src/io/harriknox/NumberName.cljs", :line 8, :column 1, :end-line 8, :end-column 35, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 8, :column 6, :end-line 8, :end-column 35}}, small-number-prefixes {:name io.harriknox.NumberName/small-number-prefixes, :file "./src/io/harriknox/NumberName.cljs", :line 5, :column 1, :end-line 5, :end-column 27, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 5, :column 6, :end-line 5, :end-column 27}}, group-string {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 90, :column 7, :end-line 90, :end-column 19, :arglists (quote ([ones tens hundreds]))}, :name io.harriknox.NumberName/group-string, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 19, :method-params ([ones tens hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 90, :end-line 90, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ones tens hundreds]))}, unit-to-ten-modification {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 18, :column 7, :end-line 18, :end-column 31, :arglists (quote ([units tens]))}, :name io.harriknox.NumberName/unit-to-ten-modification, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 31, :method-params ([units tens]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 18, :end-line 18, :max-fixed-arity 2, :fn-var true, :arglists (quote ([units tens]))}, large-number-unit-prefixes {:name io.harriknox.NumberName/large-number-unit-prefixes, :file "./src/io/harriknox/NumberName.cljs", :line 6, :column 1, :end-line 6, :end-column 32, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 6, :column 6, :end-line 6, :end-column 32}}, name-of-group {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 71, :column 7, :end-line 71, :end-column 20, :arglists (quote ([group-number]))}, :name io.harriknox.NumberName/name-of-group, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 20, :method-params ([group-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 71, :end-line 71, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-number]))}, split-and-reverse-numbers {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 10, :column 7, :end-line 10, :end-column 32, :arglists (quote ([number]))}, :name io.harriknox.NumberName/split-and-reverse-numbers, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 32, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, number-names {:name io.harriknox.NumberName/number-names, :file "./src/io/harriknox/NumberName.cljs", :line 4, :column 1, :end-line 4, :end-column 18, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 4, :column 6, :end-line 4, :end-column 18}}, number-to-string {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 108, :column 7, :end-line 108, :end-column 23, :arglists (quote ([number]))}, :name io.harriknox.NumberName/number-to-string, :variadic false, :file "./src/io/harriknox/NumberName.cljs", :end-column 23, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 108, :end-line 108, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, large-number-ten-prefixes {:name io.harriknox.NumberName/large-number-ten-prefixes, :file "./src/io/harriknox/NumberName.cljs", :line 7, :column 1, :end-line 7, :end-column 31, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberName.cljs", :line 7, :column 6, :end-line 7, :end-column 31}}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:private :else pos? exponent number or group-number >= integer? re-matches str and}, :order [:private :else or and integer? group-number pos? re-matches str number >= exponent]}, :doc nil}