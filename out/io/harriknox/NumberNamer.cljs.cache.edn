;; Analyzed by ClojureScript 1.7.170
{:use-macros nil, :excludes #{}, :name io.harriknox.NumberNamer, :imports nil, :requires {clojure.string clojure.string}, :uses nil, :defs {decrement {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 36, :column 7, :end-line 36, :end-column 16, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/decrement, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 16, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 36, :end-line 36, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, ten-to-hundred-modification {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 63, :column 7, :end-line 63, :end-column 34, :arglists (quote ([tens hundreds]))}, :name io.harriknox.NumberNamer/ten-to-hundred-modification, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 34, :method-params ([tens hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 63, :end-line 63, :max-fixed-arity 2, :fn-var true, :arglists (quote ([tens hundreds]))}, split-pad-and-reverse-numbers {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 31, :column 7, :end-line 31, :end-column 36, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/split-pad-and-reverse-numbers, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 36, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 31, :end-line 31, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, power-of-10-to-string {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 171, :column 7, :end-line 171, :end-column 28, :arglists (quote ([exponent]))}, :name io.harriknox.NumberNamer/power-of-10-to-string, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 28, :method-params ([exponent]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 171, :end-line 171, :max-fixed-arity 1, :fn-var true, :arglists (quote ([exponent]))}, large-number-group-prefix {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 72, :column 7, :end-line 72, :end-column 32, :arglists (quote ([units tens hundreds]))}, :name io.harriknox.NumberNamer/large-number-group-prefix, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 32, :method-params ([units tens hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 3, :fn-var true, :arglists (quote ([units tens hundreds]))}, unit-to-hundred-modification {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 53, :column 7, :end-line 53, :end-column 35, :arglists (quote ([units hundreds]))}, :name io.harriknox.NumberNamer/unit-to-hundred-modification, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 35, :method-params ([units hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 53, :end-line 53, :max-fixed-arity 2, :fn-var true, :arglists (quote ([units hundreds]))}, illion-group-name {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 85, :column 7, :end-line 85, :end-column 24, :arglists (quote ([group-number]))}, :name io.harriknox.NumberNamer/illion-group-name, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 24, :method-params ([group-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 85, :end-line 85, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-number]))}, modified-number-name {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 105, :column 7, :end-line 105, :end-column 27, :arglists (quote ([number suffix]))}, :name io.harriknox.NumberNamer/modified-number-name, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 27, :method-params ([number suffix]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 105, :end-line 105, :max-fixed-arity 2, :fn-var true, :arglists (quote ([number suffix]))}, large-number-hundred-prefixes {:name io.harriknox.NumberNamer/large-number-hundred-prefixes, :file "./src/io/harriknox/NumberNamer.cljs", :line 8, :column 1, :end-line 8, :end-column 35, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 8, :column 6, :end-line 8, :end-column 35}}, small-number-prefixes {:name io.harriknox.NumberNamer/small-number-prefixes, :file "./src/io/harriknox/NumberNamer.cljs", :line 5, :column 1, :end-line 5, :end-column 27, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 5, :column 6, :end-line 5, :end-column 27}}, group-string {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 116, :column 7, :end-line 116, :end-column 19, :arglists (quote ([ones tens hundreds]))}, :name io.harriknox.NumberNamer/group-string, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 19, :method-params ([ones tens hundreds]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists (quote ([ones tens hundreds]))}, unit-to-ten-modification {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 43, :column 7, :end-line 43, :end-column 31, :arglists (quote ([units tens]))}, :name io.harriknox.NumberNamer/unit-to-ten-modification, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 31, :method-params ([units tens]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 43, :end-line 43, :max-fixed-arity 2, :fn-var true, :arglists (quote ([units tens]))}, split-and-pad-numbers {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 20, :column 7, :end-line 20, :end-column 28, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/split-and-pad-numbers, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 28, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, split-numbers {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 15, :column 7, :end-line 15, :end-column 20, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/split-numbers, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 20, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, large-number-unit-prefixes {:name io.harriknox.NumberNamer/large-number-unit-prefixes, :file "./src/io/harriknox/NumberNamer.cljs", :line 6, :column 1, :end-line 6, :end-column 32, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 6, :column 6, :end-line 6, :end-column 32}}, name-of-group {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 96, :column 7, :end-line 96, :end-column 20, :arglists (quote ([group-number]))}, :name io.harriknox.NumberNamer/name-of-group, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 20, :method-params ([group-number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 96, :end-line 96, :max-fixed-arity 1, :fn-var true, :arglists (quote ([group-number]))}, split-and-reverse-numbers {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 26, :column 7, :end-line 26, :end-column 32, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/split-and-reverse-numbers, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 32, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, divide-by-three {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 153, :column 7, :end-line 153, :end-column 22, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/divide-by-three, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 22, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 153, :end-line 153, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, number-names {:name io.harriknox.NumberNamer/number-names, :file "./src/io/harriknox/NumberNamer.cljs", :line 4, :column 1, :end-line 4, :end-column 18, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 4, :column 6, :end-line 4, :end-column 18}}, number-to-string {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 134, :column 7, :end-line 134, :end-column 23, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/number-to-string, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 23, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 134, :end-line 134, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}, large-number-ten-prefixes {:name io.harriknox.NumberNamer/large-number-ten-prefixes, :file "./src/io/harriknox/NumberNamer.cljs", :line 7, :column 1, :end-line 7, :end-column 31, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 7, :column 6, :end-line 7, :end-column 31}}, parse-number {:protocol-inline nil, :meta {:file "/home/harri/Documents/Programming/Clojure/IntegerString/./src/io/harriknox/NumberNamer.cljs", :line 10, :column 7, :end-line 10, :end-column 19, :arglists (quote ([number]))}, :name io.harriknox.NumberNamer/parse-number, :variadic false, :file "./src/io/harriknox/NumberNamer.cljs", :end-column 19, :method-params ([number]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 1, :fn-var true, :arglists (quote ([number]))}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:private :else exponent number group-number re-matches str}, :order [:private :else re-matches str group-number number exponent]}, :doc nil}